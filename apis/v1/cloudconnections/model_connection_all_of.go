/*
AppDynamics Cloud Connections API

Enables you to manage cloud connections

API version: 1.0.0
Contact: support@appdynamics.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudconnections

import (
	"encoding/json"
)

// ConnectionAllOf struct for ConnectionAllOf
type ConnectionAllOf struct {
	// Set the state of the connection
	State *string `json:"state,omitempty"`
}

// NewConnectionAllOf instantiates a new ConnectionAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionAllOf() *ConnectionAllOf {
	this := ConnectionAllOf{}
	return &this
}

// NewConnectionAllOfWithDefaults instantiates a new ConnectionAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionAllOfWithDefaults() *ConnectionAllOf {
	this := ConnectionAllOf{}
	return &this
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ConnectionAllOf) GetState() string {
	if o == nil || isNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAllOf) GetStateOk() (*string, bool) {
	if o == nil || isNil(o.State) {
    return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ConnectionAllOf) HasState() bool {
	if o != nil && !isNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ConnectionAllOf) SetState(v string) {
	o.State = &v
}

func (o ConnectionAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.State) {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableConnectionAllOf struct {
	value *ConnectionAllOf
	isSet bool
}

func (v NullableConnectionAllOf) Get() *ConnectionAllOf {
	return v.value
}

func (v *NullableConnectionAllOf) Set(val *ConnectionAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionAllOf(val *ConnectionAllOf) *NullableConnectionAllOf {
	return &NullableConnectionAllOf{value: val, isSet: true}
}

func (v NullableConnectionAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


