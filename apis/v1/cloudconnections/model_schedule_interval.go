/*
AppDynamics Cloud Connections API

Enables you to manage cloud connections

API version: 1.0.0
Contact: support@appdynamics.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudconnections

import (
	"encoding/json"
)

// ScheduleInterval How often the selected connection is polled for information
type ScheduleInterval struct {
	// The polling interval is five (5) minutes
	Interval int32 `json:"interval"`
	Unit string `json:"unit"`
}

// NewScheduleInterval instantiates a new ScheduleInterval object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduleInterval(interval int32, unit string) *ScheduleInterval {
	this := ScheduleInterval{}
	this.Interval = interval
	this.Unit = unit
	return &this
}

// NewScheduleIntervalWithDefaults instantiates a new ScheduleInterval object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduleIntervalWithDefaults() *ScheduleInterval {
	this := ScheduleInterval{}
	var interval int32 = 5
	this.Interval = interval
	var unit string = "minute"
	this.Unit = unit
	return &this
}

// GetInterval returns the Interval field value
func (o *ScheduleInterval) GetInterval() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value
// and a boolean to check if the value has been set.
func (o *ScheduleInterval) GetIntervalOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Interval, true
}

// SetInterval sets field value
func (o *ScheduleInterval) SetInterval(v int32) {
	o.Interval = v
}

// GetUnit returns the Unit field value
func (o *ScheduleInterval) GetUnit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Unit
}

// GetUnitOk returns a tuple with the Unit field value
// and a boolean to check if the value has been set.
func (o *ScheduleInterval) GetUnitOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Unit, true
}

// SetUnit sets field value
func (o *ScheduleInterval) SetUnit(v string) {
	o.Unit = v
}

func (o ScheduleInterval) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["interval"] = o.Interval
	}
	if true {
		toSerialize["unit"] = o.Unit
	}
	return json.Marshal(toSerialize)
}

type NullableScheduleInterval struct {
	value *ScheduleInterval
	isSet bool
}

func (v NullableScheduleInterval) Get() *ScheduleInterval {
	return v.value
}

func (v *NullableScheduleInterval) Set(val *ScheduleInterval) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduleInterval) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduleInterval) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduleInterval(val *ScheduleInterval) *NullableScheduleInterval {
	return &NullableScheduleInterval{value: val, isSet: true}
}

func (v NullableScheduleInterval) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduleInterval) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


