/*
AppDynamics Cloud Connections API

Enables you to manage cloud connections

API version: 1.0.0
Contact: support@appdynamics.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudconnections

import (
	"encoding/json"
)

// AzureConfigurationDetails struct for AzureConfigurationDetails
type AzureConfigurationDetails struct {
	Regions interface{} `json:"regions,omitempty"`
	Polling *ScheduleInterval `json:"polling,omitempty"`
	ImportTags *ImportTagConfiguration `json:"importTags,omitempty"`
	// expression for filtering resources to be monitored, based on tags
	TagFilter *string `json:"tagFilter,omitempty"`
	Services interface{} `json:"services,omitempty"`
	// Azure Resource groups used to fetch metrics
	ResourceGroups []string `json:"resourceGroups,omitempty"`
}

// NewAzureConfigurationDetails instantiates a new AzureConfigurationDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureConfigurationDetails() *AzureConfigurationDetails {
	this := AzureConfigurationDetails{}
	return &this
}

// NewAzureConfigurationDetailsWithDefaults instantiates a new AzureConfigurationDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureConfigurationDetailsWithDefaults() *AzureConfigurationDetails {
	this := AzureConfigurationDetails{}
	return &this
}

// GetRegions returns the Regions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureConfigurationDetails) GetRegions() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureConfigurationDetails) GetRegionsOk() (*interface{}, bool) {
	if o == nil || isNil(o.Regions) {
    return nil, false
	}
	return &o.Regions, true
}

// HasRegions returns a boolean if a field has been set.
func (o *AzureConfigurationDetails) HasRegions() bool {
	if o != nil && isNil(o.Regions) {
		return true
	}

	return false
}

// SetRegions gets a reference to the given interface{} and assigns it to the Regions field.
func (o *AzureConfigurationDetails) SetRegions(v interface{}) {
	o.Regions = v
}

// GetPolling returns the Polling field value if set, zero value otherwise.
func (o *AzureConfigurationDetails) GetPolling() ScheduleInterval {
	if o == nil || isNil(o.Polling) {
		var ret ScheduleInterval
		return ret
	}
	return *o.Polling
}

// GetPollingOk returns a tuple with the Polling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureConfigurationDetails) GetPollingOk() (*ScheduleInterval, bool) {
	if o == nil || isNil(o.Polling) {
    return nil, false
	}
	return o.Polling, true
}

// HasPolling returns a boolean if a field has been set.
func (o *AzureConfigurationDetails) HasPolling() bool {
	if o != nil && !isNil(o.Polling) {
		return true
	}

	return false
}

// SetPolling gets a reference to the given ScheduleInterval and assigns it to the Polling field.
func (o *AzureConfigurationDetails) SetPolling(v ScheduleInterval) {
	o.Polling = &v
}

// GetImportTags returns the ImportTags field value if set, zero value otherwise.
func (o *AzureConfigurationDetails) GetImportTags() ImportTagConfiguration {
	if o == nil || isNil(o.ImportTags) {
		var ret ImportTagConfiguration
		return ret
	}
	return *o.ImportTags
}

// GetImportTagsOk returns a tuple with the ImportTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureConfigurationDetails) GetImportTagsOk() (*ImportTagConfiguration, bool) {
	if o == nil || isNil(o.ImportTags) {
    return nil, false
	}
	return o.ImportTags, true
}

// HasImportTags returns a boolean if a field has been set.
func (o *AzureConfigurationDetails) HasImportTags() bool {
	if o != nil && !isNil(o.ImportTags) {
		return true
	}

	return false
}

// SetImportTags gets a reference to the given ImportTagConfiguration and assigns it to the ImportTags field.
func (o *AzureConfigurationDetails) SetImportTags(v ImportTagConfiguration) {
	o.ImportTags = &v
}

// GetTagFilter returns the TagFilter field value if set, zero value otherwise.
func (o *AzureConfigurationDetails) GetTagFilter() string {
	if o == nil || isNil(o.TagFilter) {
		var ret string
		return ret
	}
	return *o.TagFilter
}

// GetTagFilterOk returns a tuple with the TagFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureConfigurationDetails) GetTagFilterOk() (*string, bool) {
	if o == nil || isNil(o.TagFilter) {
    return nil, false
	}
	return o.TagFilter, true
}

// HasTagFilter returns a boolean if a field has been set.
func (o *AzureConfigurationDetails) HasTagFilter() bool {
	if o != nil && !isNil(o.TagFilter) {
		return true
	}

	return false
}

// SetTagFilter gets a reference to the given string and assigns it to the TagFilter field.
func (o *AzureConfigurationDetails) SetTagFilter(v string) {
	o.TagFilter = &v
}

// GetServices returns the Services field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureConfigurationDetails) GetServices() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureConfigurationDetails) GetServicesOk() (*interface{}, bool) {
	if o == nil || isNil(o.Services) {
    return nil, false
	}
	return &o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *AzureConfigurationDetails) HasServices() bool {
	if o != nil && isNil(o.Services) {
		return true
	}

	return false
}

// SetServices gets a reference to the given interface{} and assigns it to the Services field.
func (o *AzureConfigurationDetails) SetServices(v interface{}) {
	o.Services = v
}

// GetResourceGroups returns the ResourceGroups field value if set, zero value otherwise.
func (o *AzureConfigurationDetails) GetResourceGroups() []string {
	if o == nil || isNil(o.ResourceGroups) {
		var ret []string
		return ret
	}
	return o.ResourceGroups
}

// GetResourceGroupsOk returns a tuple with the ResourceGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureConfigurationDetails) GetResourceGroupsOk() ([]string, bool) {
	if o == nil || isNil(o.ResourceGroups) {
    return nil, false
	}
	return o.ResourceGroups, true
}

// HasResourceGroups returns a boolean if a field has been set.
func (o *AzureConfigurationDetails) HasResourceGroups() bool {
	if o != nil && !isNil(o.ResourceGroups) {
		return true
	}

	return false
}

// SetResourceGroups gets a reference to the given []string and assigns it to the ResourceGroups field.
func (o *AzureConfigurationDetails) SetResourceGroups(v []string) {
	o.ResourceGroups = v
}

func (o AzureConfigurationDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Regions != nil {
		toSerialize["regions"] = o.Regions
	}
	if !isNil(o.Polling) {
		toSerialize["polling"] = o.Polling
	}
	if !isNil(o.ImportTags) {
		toSerialize["importTags"] = o.ImportTags
	}
	if !isNil(o.TagFilter) {
		toSerialize["tagFilter"] = o.TagFilter
	}
	if o.Services != nil {
		toSerialize["services"] = o.Services
	}
	if !isNil(o.ResourceGroups) {
		toSerialize["resourceGroups"] = o.ResourceGroups
	}
	return json.Marshal(toSerialize)
}

type NullableAzureConfigurationDetails struct {
	value *AzureConfigurationDetails
	isSet bool
}

func (v NullableAzureConfigurationDetails) Get() *AzureConfigurationDetails {
	return v.value
}

func (v *NullableAzureConfigurationDetails) Set(val *AzureConfigurationDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureConfigurationDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureConfigurationDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureConfigurationDetails(val *AzureConfigurationDetails) *NullableAzureConfigurationDetails {
	return &NullableAzureConfigurationDetails{value: val, isSet: true}
}

func (v NullableAzureConfigurationDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureConfigurationDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


