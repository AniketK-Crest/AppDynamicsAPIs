/*
AppDynamics Cloud Connections API

Enables you to manage cloud connections

API version: 1.0.0
Contact: support@appdynamics.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudconnections

import (
	"encoding/json"
)

// BaseConfigurationResource struct for BaseConfigurationResource
type BaseConfigurationResource struct {
	// unique identifier for this resource
	Id string `json:"id"`
	// display name for this resource
	DisplayName string `json:"displayName"`
	// a description of this resource
	Description *string `json:"description,omitempty"`
}

// NewBaseConfigurationResource instantiates a new BaseConfigurationResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseConfigurationResource(id string, displayName string) *BaseConfigurationResource {
	this := BaseConfigurationResource{}
	this.Id = id
	this.DisplayName = displayName
	return &this
}

// NewBaseConfigurationResourceWithDefaults instantiates a new BaseConfigurationResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseConfigurationResourceWithDefaults() *BaseConfigurationResource {
	this := BaseConfigurationResource{}
	return &this
}

// GetId returns the Id field value
func (o *BaseConfigurationResource) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BaseConfigurationResource) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BaseConfigurationResource) SetId(v string) {
	o.Id = v
}

// GetDisplayName returns the DisplayName field value
func (o *BaseConfigurationResource) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *BaseConfigurationResource) GetDisplayNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *BaseConfigurationResource) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BaseConfigurationResource) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseConfigurationResource) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BaseConfigurationResource) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BaseConfigurationResource) SetDescription(v string) {
	o.Description = &v
}

func (o BaseConfigurationResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["displayName"] = o.DisplayName
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableBaseConfigurationResource struct {
	value *BaseConfigurationResource
	isSet bool
}

func (v NullableBaseConfigurationResource) Get() *BaseConfigurationResource {
	return v.value
}

func (v *NullableBaseConfigurationResource) Set(val *BaseConfigurationResource) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseConfigurationResource) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseConfigurationResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseConfigurationResource(val *BaseConfigurationResource) *NullableBaseConfigurationResource {
	return &NullableBaseConfigurationResource{value: val, isSet: true}
}

func (v NullableBaseConfigurationResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseConfigurationResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


