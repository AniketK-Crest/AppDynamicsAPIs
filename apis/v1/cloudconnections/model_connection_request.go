/*
AppDynamics Cloud Connections API

Enables you to manage cloud connections

API version: 1.0.0
Contact: support@appdynamics.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudconnections

import (
	"encoding/json"
)

// ConnectionRequest struct for ConnectionRequest
type ConnectionRequest struct {
	Connection
	Details ConnectionRequestDetails `json:"details"`
}

// NewConnectionRequest instantiates a new ConnectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionRequest(details ConnectionRequestDetails, displayName string, type_ ProviderType) *ConnectionRequest {
	this := ConnectionRequest{}
	this.DisplayName = displayName
	this.Type = type_
	this.Details = details
	return &this
}

// NewConnectionRequestWithDefaults instantiates a new ConnectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionRequestWithDefaults() *ConnectionRequest {
	this := ConnectionRequest{}
	return &this
}

// GetDetails returns the Details field value
func (o *ConnectionRequest) GetDetails() ConnectionRequestDetails {
	if o == nil {
		var ret ConnectionRequestDetails
		return ret
	}

	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value
// and a boolean to check if the value has been set.
func (o *ConnectionRequest) GetDetailsOk() (*ConnectionRequestDetails, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Details, true
}

// SetDetails sets field value
func (o *ConnectionRequest) SetDetails(v ConnectionRequestDetails) {
	o.Details = v
}

func (o ConnectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedConnection, errConnection := json.Marshal(o.Connection)
	if errConnection != nil {
		return []byte{}, errConnection
	}
	errConnection = json.Unmarshal([]byte(serializedConnection), &toSerialize)
	if errConnection != nil {
		return []byte{}, errConnection
	}
	if true {
		toSerialize["details"] = o.Details
	}
	return json.Marshal(toSerialize)
}

type NullableConnectionRequest struct {
	value *ConnectionRequest
	isSet bool
}

func (v NullableConnectionRequest) Get() *ConnectionRequest {
	return v.value
}

func (v *NullableConnectionRequest) Set(val *ConnectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionRequest(val *ConnectionRequest) *NullableConnectionRequest {
	return &NullableConnectionRequest{value: val, isSet: true}
}

func (v NullableConnectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


