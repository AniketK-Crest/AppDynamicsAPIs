/*
AppDynamics Cloud Connections API

Enables you to manage cloud connections

API version: 1.0.0
Contact: support@appdynamics.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudconnections

import (
	"encoding/json"
	"fmt"
)

// AWSConnectionRequestDetails - struct for AWSConnectionRequestDetails
type AWSConnectionRequestDetails struct {
	AWSAccessKeyDetails *AWSAccessKeyDetails
	AWSRoleDelegationCreationDetails *AWSRoleDelegationCreationDetails
}

// AWSAccessKeyDetailsAsAWSConnectionRequestDetails is a convenience function that returns AWSAccessKeyDetails wrapped in AWSConnectionRequestDetails
func AWSAccessKeyDetailsAsAWSConnectionRequestDetails(v *AWSAccessKeyDetails) AWSConnectionRequestDetails {
	return AWSConnectionRequestDetails{
		AWSAccessKeyDetails: v,
	}
}

// AWSRoleDelegationCreationDetailsAsAWSConnectionRequestDetails is a convenience function that returns AWSRoleDelegationCreationDetails wrapped in AWSConnectionRequestDetails
func AWSRoleDelegationCreationDetailsAsAWSConnectionRequestDetails(v *AWSRoleDelegationCreationDetails) AWSConnectionRequestDetails {
	return AWSConnectionRequestDetails{
		AWSRoleDelegationCreationDetails: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *AWSConnectionRequestDetails) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AWSAccessKeyDetails
	err = newStrictDecoder(data).Decode(&dst.AWSAccessKeyDetails)
	if err == nil {
		jsonAWSAccessKeyDetails, _ := json.Marshal(dst.AWSAccessKeyDetails)
		if string(jsonAWSAccessKeyDetails) == "{}" { // empty struct
			dst.AWSAccessKeyDetails = nil
		} else {
			match++
		}
	} else {
		dst.AWSAccessKeyDetails = nil
	}

	// try to unmarshal data into AWSRoleDelegationCreationDetails
	err = newStrictDecoder(data).Decode(&dst.AWSRoleDelegationCreationDetails)
	if err == nil {
		jsonAWSRoleDelegationCreationDetails, _ := json.Marshal(dst.AWSRoleDelegationCreationDetails)
		if string(jsonAWSRoleDelegationCreationDetails) == "{}" { // empty struct
			dst.AWSRoleDelegationCreationDetails = nil
		} else {
			match++
		}
	} else {
		dst.AWSRoleDelegationCreationDetails = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AWSAccessKeyDetails = nil
		dst.AWSRoleDelegationCreationDetails = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AWSConnectionRequestDetails)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AWSConnectionRequestDetails)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AWSConnectionRequestDetails) MarshalJSON() ([]byte, error) {
	if src.AWSAccessKeyDetails != nil {
		return json.Marshal(&src.AWSAccessKeyDetails)
	}

	if src.AWSRoleDelegationCreationDetails != nil {
		return json.Marshal(&src.AWSRoleDelegationCreationDetails)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AWSConnectionRequestDetails) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.AWSAccessKeyDetails != nil {
		return obj.AWSAccessKeyDetails
	}

	if obj.AWSRoleDelegationCreationDetails != nil {
		return obj.AWSRoleDelegationCreationDetails
	}

	// all schemas are nil
	return nil
}

type NullableAWSConnectionRequestDetails struct {
	value *AWSConnectionRequestDetails
	isSet bool
}

func (v NullableAWSConnectionRequestDetails) Get() *AWSConnectionRequestDetails {
	return v.value
}

func (v *NullableAWSConnectionRequestDetails) Set(val *AWSConnectionRequestDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableAWSConnectionRequestDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableAWSConnectionRequestDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAWSConnectionRequestDetails(val *AWSConnectionRequestDetails) *NullableAWSConnectionRequestDetails {
	return &NullableAWSConnectionRequestDetails{value: val, isSet: true}
}

func (v NullableAWSConnectionRequestDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAWSConnectionRequestDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


