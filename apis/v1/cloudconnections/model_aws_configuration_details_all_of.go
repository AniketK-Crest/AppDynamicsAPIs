// Copyright 2023 Cisco Systems, Inc.
// 
// Licensed under the MPL License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     https://www.mozilla.org/en-US/MPL/2.0/
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/*
AppDynamics Cloud Connections API

Enables you to manage cloud connections

API version: 1.0.0
Contact: support@appdynamics.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudconnections

import (
	"encoding/json"
)

// AWSConfigurationDetailsAllOf struct for AWSConfigurationDetailsAllOf
type AWSConfigurationDetailsAllOf struct {
	Services interface{} `json:"services,omitempty"`
	Regions interface{} `json:"regions,omitempty"`
}

// NewAWSConfigurationDetailsAllOf instantiates a new AWSConfigurationDetailsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAWSConfigurationDetailsAllOf() *AWSConfigurationDetailsAllOf {
	this := AWSConfigurationDetailsAllOf{}
	return &this
}

// NewAWSConfigurationDetailsAllOfWithDefaults instantiates a new AWSConfigurationDetailsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSConfigurationDetailsAllOfWithDefaults() *AWSConfigurationDetailsAllOf {
	this := AWSConfigurationDetailsAllOf{}
	return &this
}

// GetServices returns the Services field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AWSConfigurationDetailsAllOf) GetServices() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AWSConfigurationDetailsAllOf) GetServicesOk() (*interface{}, bool) {
	if o == nil || isNil(o.Services) {
    return nil, false
	}
	return &o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *AWSConfigurationDetailsAllOf) HasServices() bool {
	if o != nil && isNil(o.Services) {
		return true
	}

	return false
}

// SetServices gets a reference to the given interface{} and assigns it to the Services field.
func (o *AWSConfigurationDetailsAllOf) SetServices(v interface{}) {
	o.Services = v
}

// GetRegions returns the Regions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AWSConfigurationDetailsAllOf) GetRegions() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AWSConfigurationDetailsAllOf) GetRegionsOk() (*interface{}, bool) {
	if o == nil || isNil(o.Regions) {
    return nil, false
	}
	return &o.Regions, true
}

// HasRegions returns a boolean if a field has been set.
func (o *AWSConfigurationDetailsAllOf) HasRegions() bool {
	if o != nil && isNil(o.Regions) {
		return true
	}

	return false
}

// SetRegions gets a reference to the given interface{} and assigns it to the Regions field.
func (o *AWSConfigurationDetailsAllOf) SetRegions(v interface{}) {
	o.Regions = v
}

func (o AWSConfigurationDetailsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Services != nil {
		toSerialize["services"] = o.Services
	}
	if o.Regions != nil {
		toSerialize["regions"] = o.Regions
	}
	return json.Marshal(toSerialize)
}

type NullableAWSConfigurationDetailsAllOf struct {
	value *AWSConfigurationDetailsAllOf
	isSet bool
}

func (v NullableAWSConfigurationDetailsAllOf) Get() *AWSConfigurationDetailsAllOf {
	return v.value
}

func (v *NullableAWSConfigurationDetailsAllOf) Set(val *AWSConfigurationDetailsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAWSConfigurationDetailsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAWSConfigurationDetailsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAWSConfigurationDetailsAllOf(val *AWSConfigurationDetailsAllOf) *NullableAWSConfigurationDetailsAllOf {
	return &NullableAWSConfigurationDetailsAllOf{value: val, isSet: true}
}

func (v NullableAWSConfigurationDetailsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAWSConfigurationDetailsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


