/*
AppDynamics Cloud Query Service API

An API providing access to observation data using an AppDynamics domain-specific language.  The language is declarative, read-only (it does not allow for data modification) and specific to the AppD MELT model. It presents MELT data (metrics, events, logs, traces) and State in the scope of monitored topology.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudquery

import (
	"encoding/json"
)

// PaginationReference A reference to the next page of results if there are more results to be had.
type PaginationReference struct {
	Next *PaginationReferenceNext `json:"next,omitempty"`
}

// NewPaginationReference instantiates a new PaginationReference object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginationReference() *PaginationReference {
	this := PaginationReference{}
	return &this
}

// NewPaginationReferenceWithDefaults instantiates a new PaginationReference object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginationReferenceWithDefaults() *PaginationReference {
	this := PaginationReference{}
	return &this
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *PaginationReference) GetNext() PaginationReferenceNext {
	if o == nil || isNil(o.Next) {
		var ret PaginationReferenceNext
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationReference) GetNextOk() (*PaginationReferenceNext, bool) {
	if o == nil || isNil(o.Next) {
    return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *PaginationReference) HasNext() bool {
	if o != nil && !isNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given PaginationReferenceNext and assigns it to the Next field.
func (o *PaginationReference) SetNext(v PaginationReferenceNext) {
	o.Next = &v
}

func (o PaginationReference) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Next) {
		toSerialize["next"] = o.Next
	}
	return json.Marshal(toSerialize)
}

type NullablePaginationReference struct {
	value *PaginationReference
	isSet bool
}

func (v NullablePaginationReference) Get() *PaginationReference {
	return v.value
}

func (v *NullablePaginationReference) Set(val *PaginationReference) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginationReference) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginationReference) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginationReference(val *PaginationReference) *NullablePaginationReference {
	return &NullablePaginationReference{value: val, isSet: true}
}

func (v NullablePaginationReference) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginationReference) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


