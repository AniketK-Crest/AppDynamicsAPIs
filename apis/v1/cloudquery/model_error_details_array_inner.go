/*
AppDynamics Cloud Query Service API

An API providing access to observation data using an AppDynamics domain-specific language.  The language is declarative, read-only (it does not allow for data modification) and specific to the AppD MELT model. It presents MELT data (metrics, events, logs, traces) and State in the scope of monitored topology.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudquery

import (
	"encoding/json"
	"fmt"
)

// ErrorDetailsArrayInner struct for ErrorDetailsArrayInner
type ErrorDetailsArrayInner struct {
	ErrorDetailItem *ErrorDetailItem
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *ErrorDetailsArrayInner) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into ErrorDetailItem
	err = json.Unmarshal(data, &dst.ErrorDetailItem);
	if err == nil {
		jsonErrorDetailItem, _ := json.Marshal(dst.ErrorDetailItem)
		if string(jsonErrorDetailItem) == "{}" { // empty struct
			dst.ErrorDetailItem = nil
		} else {
			return nil // data stored in dst.ErrorDetailItem, return on the first match
		}
	} else {
		dst.ErrorDetailItem = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(ErrorDetailsArrayInner)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *ErrorDetailsArrayInner) MarshalJSON() ([]byte, error) {
	if src.ErrorDetailItem != nil {
		return json.Marshal(&src.ErrorDetailItem)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableErrorDetailsArrayInner struct {
	value *ErrorDetailsArrayInner
	isSet bool
}

func (v NullableErrorDetailsArrayInner) Get() *ErrorDetailsArrayInner {
	return v.value
}

func (v *NullableErrorDetailsArrayInner) Set(val *ErrorDetailsArrayInner) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorDetailsArrayInner) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorDetailsArrayInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorDetailsArrayInner(val *ErrorDetailsArrayInner) *NullableErrorDetailsArrayInner {
	return &NullableErrorDetailsArrayInner{value: val, isSet: true}
}

func (v NullableErrorDetailsArrayInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorDetailsArrayInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


