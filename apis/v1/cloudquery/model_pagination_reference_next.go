// Copyright 2023 Cisco Systems, Inc.
// 
// Licensed under the MPL License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     https://www.mozilla.org/en-US/MPL/2.0/
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/*
AppDynamics Cloud Query Service API

An API providing access to observation data using an AppDynamics domain-specific language.  The language is declarative, read-only (it does not allow for data modification) and specific to the AppD MELT model. It presents MELT data (metrics, events, logs, traces) and State in the scope of monitored topology.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudquery

import (
	"encoding/json"
)

// PaginationReferenceNext Holds the link to the next page of results.
type PaginationReferenceNext struct {
	// The effective link to the next result page
	Href *string `json:"href,omitempty"`
}

// NewPaginationReferenceNext instantiates a new PaginationReferenceNext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginationReferenceNext() *PaginationReferenceNext {
	this := PaginationReferenceNext{}
	return &this
}

// NewPaginationReferenceNextWithDefaults instantiates a new PaginationReferenceNext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginationReferenceNextWithDefaults() *PaginationReferenceNext {
	this := PaginationReferenceNext{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *PaginationReferenceNext) GetHref() string {
	if o == nil || isNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationReferenceNext) GetHrefOk() (*string, bool) {
	if o == nil || isNil(o.Href) {
    return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *PaginationReferenceNext) HasHref() bool {
	if o != nil && !isNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *PaginationReferenceNext) SetHref(v string) {
	o.Href = &v
}

func (o PaginationReferenceNext) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	return json.Marshal(toSerialize)
}

type NullablePaginationReferenceNext struct {
	value *PaginationReferenceNext
	isSet bool
}

func (v NullablePaginationReferenceNext) Get() *PaginationReferenceNext {
	return v.value
}

func (v *NullablePaginationReferenceNext) Set(val *PaginationReferenceNext) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginationReferenceNext) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginationReferenceNext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginationReferenceNext(val *PaginationReferenceNext) *NullablePaginationReferenceNext {
	return &NullablePaginationReferenceNext{value: val, isSet: true}
}

func (v NullablePaginationReferenceNext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginationReferenceNext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


