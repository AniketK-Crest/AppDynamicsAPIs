openapi: 3.0.3
info:
  description: |-
    An API providing access to observation data using an AppDynamics domain-specific language.

    The language is declarative, read-only (it does not allow for data modification) and specific to the AppD MELT model.
    It presents MELT data (metrics, events, logs, traces) and State in the scope of monitored topology.
  license:
    name: AppDynamics
    url: https://www.appdynamics.com
  title: AppDynamics Cloud Query Service API
  version: "1.0"
servers:
- description: Production environment
  url: "https://{tenant-name}.observe.appdynamics.com/monitoring/v1"
  variables:
    tenant-name:
      default: customer1
      description: Tenant name
tags:
- name: ExecuteQuery
- name: ResultPagination
paths:
  /query/execute:
    post:
      description: Execute a query to fetch observation data.
      operationId: executeQuery
      requestBody:
        content:
          application/json:
            examples:
              Execute a query:
                description: Execute a simple query.
                value:
                  query: "fetch id: id, name: attributes(service.name), cpm: metrics(apm:response_time)\
                    \ {source, timestamp, min, max} from entities(apm:service)[attributes(service.namespace)\
                    \ = 'Levitate'].out.to(apm:service_instance) since -3h"
            schema:
              $ref: '#/components/schemas/QueryRequestBody'
        description: A simple JSON object containing a query string.
      responses:
        "200":
          content:
            application/json:
              examples:
                Response as a JSON array:
                  value: |-
                    [
                      {
                        "type": "model",
                        "model": {
                          "name": "m:main",
                          "fields": [
                            {
                              "alias": "id",
                              "type": "string",
                              "hints": {
                                "kind": "entity",
                                "field": "id",
                                "type": "apm:service_instance"
                              }
                            },
                            {
                              "alias": "name",
                              "type": "string",
                              "hints": {}
                            },
                            {
                              "alias": "cpm",
                              "type": "complex",
                              "hints": {
                                "kind": "metric",
                                "type": "apm:response_time"
                              },
                              "form": "reference",
                              "model": {
                                "name": "m:cpm",
                                "fields": [
                                  {
                                    "alias": "source",
                                    "type": "string",
                                    "hints": {
                                      "kind": "metric",
                                      "field": "source",
                                      "type": "apm:response_time"
                                    }
                                  },
                                  {
                                    "alias": "cpm",
                                    "type": "timeseries",
                                    "hints": {
                                      "kind": "metric",
                                      "type": "apm:response_time"
                                    },
                                    "form": "inline",
                                    "model": {
                                      "name": "m:cpm_2",
                                      "fields": [
                                        {
                                          "alias": "timestamp",
                                          "type": "timestamp",
                                          "hints": {
                                            "kind": "metric",
                                            "field": "timestamp",
                                            "type": "apm:response_time"
                                          }
                                        },
                                        {
                                          "alias": "min",
                                          "type": "number",
                                          "hints": {
                                            "kind": "metric",
                                            "field": "min",
                                            "type": "apm:response_time"
                                          }
                                        },
                                        {
                                          "alias": "max",
                                          "type": "number",
                                          "hints": {
                                            "kind": "metric",
                                            "field": "max",
                                            "type": "apm:response_time"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "data",
                        "model": {
                          "$jsonPath": "$..[?(@.type == 'model')]..[?(@.name == 'm:main')]",
                          "$model": "m:main"
                        },
                        "metadata": {
                          "since": "2022-06-14T09:21:18.143353Z",
                          "until": "2022-06-17T09:21:18.143353Z"
                        },
                        "dataset": "d:main",
                        "data": [
                          [
                            "apm:service_instance:QkYwm51nMAeUADsp4uY6NA",
                            "Query Service",
                            {
                              "$dataset": "d:metrics-1",
                              "$jsonPath": "$..[?(@.type == 'data' && @.dataset == 'd:metrics-1')]"
                            }
                          ]
                        ]
                      },
                      {
                        "type": "heartbeat"
                      },
                      {
                        "type": "data",
                        "model": {
                          "$jsonPath": "$..[?(@.type == 'model')]..[?(@.name == 'm:cpm')]",
                          "$model": "m:cpm"
                        },
                        "metadata": {
                          "granularitySeconds": 60
                        },
                        "dataset": "d:metrics-1",
                        "data": [
                          [
                            "sys:derived",
                            [
                              [
                                "2022-06-16T10:00Z",
                                470995,
                                53246567
                              ],
                              [
                                "2022-06-16T11:00Z",
                                460153,
                                94186816
                              ],
                              [
                                "2022-06-16T12:00Z",
                                460708,
                                81749730
                              ]
                            ]
                          ]
                        ]
                      },
                      {
                        "type": "error",
                        "error": {
                          "timestamp": "2022-06-17T09:29:52.578280Z",
                          "errorCode": "MS-001",
                          "title": "General Error",
                          "detail": "Metric data error (logged with TraceId: [cb7d28a9c4cb41cb88f90db48149d78d], SpanId: [c5937a4300964f2f])",
                          "traceId": "cb7d28a9c4cb41cb88f90db48149d78d",
                          "tenantId": "0baa5ce3-b54c-4153-b902-1208262aa3e1",
                          "query": "fetch id: id, name: attributes(service.name), cpm: metrics(apm:response_time) {source, timestamp, min, max} from entities(apm:service)[attributes(service.namespace) = 'Levitate'].out.to(apm:service_instance) since -3h"
                        }
                      }
                    ]
              schema:
                $ref: '#/components/schemas/QueryResponseArrayBody'
            application/x-ndjson:
              examples:
                (Part 1) Streamed JSON response as a sequence of newline-delimited JSON objects:
                  description: |-
                    Each object is printed on a single line delimited by ASCII control character `\n`.
                    JSON objects in the example are indented for better readability.
                  value: |-
                    {
                      "type": "model",
                      "model": {
                        "name": "m:main",
                        "fields": [
                          {
                            "alias": "id",
                            "type": "string",
                            "hints": {
                              "kind": "entity",
                              "field": "id",
                              "type": "apm:service_instance"
                            }
                          },
                          {
                            "alias": "name",
                            "type": "string",
                            "hints": {}
                          },
                          {
                            "alias": "cpm",
                            "type": "complex",
                            "hints": {
                              "kind": "metric",
                              "type": "apm:response_time"
                            },
                            "form": "reference",
                            "model": {
                              "name": "m:cpm",
                              "fields": [
                                {
                                  "alias": "source",
                                  "type": "string",
                                  "hints": {
                                    "kind": "metric",
                                    "field": "source",
                                    "type": "apm:response_time"
                                  }
                                },
                                {
                                  "alias": "cpm",
                                  "type": "timeseries",
                                  "hints": {
                                    "kind": "metric",
                                    "type": "apm:response_time"
                                  },
                                  "form": "inline",
                                  "model": {
                                    "name": "m:cpm_2",
                                    "fields": [
                                      {
                                        "alias": "timestamp",
                                        "type": "timestamp",
                                        "hints": {
                                          "kind": "metric",
                                          "field": "timestamp",
                                          "type": "apm:response_time"
                                        }
                                      },
                                      {
                                        "alias": "min",
                                        "type": "number",
                                        "hints": {
                                          "kind": "metric",
                                          "field": "min",
                                          "type": "apm:response_time"
                                        }
                                      },
                                      {
                                        "alias": "max",
                                        "type": "number",
                                        "hints": {
                                          "kind": "metric",
                                          "field": "max",
                                          "type": "apm:response_time"
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                (Part 2) Directly followed by next object in the body (Objects are not in an array):
                  description: |-
                    A chunk of type <em>data</em> might contain a pagination <em>_links</em> element which when followed will retrieve the next page of results.
                    The example given below is fictitious and does not represent a valid cursor.
                  value: |-
                    {
                      "type": "data",
                      "model": {
                        "$jsonPath": "$..[?(@.type == 'model')]..[?(@.name == 'm:main')]",
                        "$model": "m:main"
                      },
                      "metadata": {
                        "since": "2022-06-14T09:21:18.143353Z",
                        "until": "2022-06-17T09:21:18.143353Z"
                      },
                      "dataset": "d:main",
                      "_links": {
                        "next": {
                          "href": "/monitoring/v1/query/continue?cursor=ewogICJza2lwIiA6IDEsCiAgInF1ZXJ5IiA6ICJmZXRjaCBpZDogaWQsIG5hbWU6IG"
                        }
                      },
                      "data": [
                        [
                          "apm:service_instance:QkYwm51nMAeUADsp4uY6NA",
                          "Query Service",
                          {
                            "$dataset": "d:metrics-1",
                            "$jsonPath": "$..[?(@.type == 'data' && @.dataset == 'd:metrics-1')]"
                          }
                        ],
                        [
                          "apm:service_instance:4Qb9EQ9QOHKcSA1l6w5ncQ",
                          "Query Service",
                          {
                            "$dataset": "d:metrics-2",
                            "$jsonPath": "$..[?(@.type == 'data' && @.dataset == 'd:metrics-2')]"
                          }
                        ]
                      ]
                    }
                (Part 3) Datasets might be referenced from other datasets and might contain nested timeseries.:
                  value: |-
                    {
                      "type": "data",
                      "model": {
                        "$jsonPath": "$..[?(@.type == 'model')]..[?(@.name == 'm:cpm')]",
                        "$model": "m:cpm"
                      },
                      "metadata": {
                        "granularitySeconds": 60
                      },
                      "dataset": "d:metrics-1",
                      "data": [
                        [
                          "sys:derived",
                          [
                            [
                              "2022-06-16T10:00Z",
                              470995,
                              53246567
                            ],
                            [
                              "2022-06-16T11:00Z",
                              460153,
                              94186816
                            ],
                            [
                              "2022-06-16T12:00Z",
                              460708,
                              81749730
                            ]
                          ]
                        ]
                      ]
                    }
                (Part 4) Possibly an error:
                  value: |-
                    {
                      "type": "error",
                      "error": {
                        "timestamp": "2022-06-17T09:29:52.578280Z",
                        "errorCode": "MS-001",
                        "title": "General Error",
                        "detail": "Metric data error (logged with TraceId: [cb7d28a9c4cb41cb88f90db48149d78d], SpanId: [c5937a4300964f2f])",
                        "traceId": "cb7d28a9c4cb41cb88f90db48149d78d",
                        "tenantId": "0baa5ce3-b54c-4153-b902-1208262aa3e1",
                        "query": "fetch id: id, name: attributes(service.name), cpm: metrics(apm:response_time) {source, timestamp, min, max} from entities(apm:service)[attributes(service.namespace) = 'Levitate'].out.to(apm:service_instance) since -3h"
                      }
                    }
                (Part 5) Heartbeat if needed to make sure the connection is kept alive:
                  value: |-
                    {
                      "type": "heartbeat"
                    }
              schema:
                $ref: '#/components/schemas/executeQuery_200_response'
          description: |-
            The API returns a chunked response with a sequence of objects. The first object describes the model of the returned data.
            The model is followed by a series of datasets of actual values or error objects indicating problems during query execution.
          headers:
            transfer-encoding:
              description: chunked
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/problem+json:
              example:
                type: https://developer.cisco.com/docs/appdynamics/errors/#!input-validation
                timestamp: 2020-02-22T11:22:33.980629Z
                traceId: fc3decb4bf674b7cb16c5f208fb1f18b
                title: Query compilation failure!
                detail: Unable to compile due to query semantic errors.
                tenantId: 47a01df9-54a0-472b-96b8-7c8f64eb7cbf
                query: fetch id from (apm:serviceX)
                compilationErrors:
                - message: Unknown alias 'id'
                  fixSuggestion: ""
                  fixPossibilities: []
                  errorType: SEMANTIC
                  errorFrom: 1:6
                  errorTo: 1:7
                - message: "Referenced topology set has errors: 1:23-1:34"
                  fixPossibilities: []
                  errorType: SEMANTIC
                  errorFrom: 1:6
                  errorTo: 1:7
                - message: No Type found in the Schema for apm:serviceX with any specified
                    namespace or namespace common if none was specified
                  fixSuggestion: Did you mean 'apm:service'?
                  fixPossibilities:
                  - apm:service
                  - apm:service_endpoint
                  - apm:service_instance
                  errorType: SEMANTIC
                  errorFrom: 1:23
                  errorTo: 1:34
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          content:
            application/problem+json:
              example:
                type: https://developer.cisco.com/docs/appdynamics/errors/#!internal-server-error
                timestamp: 2020-02-22T11:22:33.980629Z
                traceId: fc3decb4bf674b7cb16c5f208fb1f18b
                title: Internal Server Error
                detail: Unexpected error happened (logged as 224397de-5843-4954-b092-37c84aead3c9)
                tenantId: 47a01df9-54a0-472b-96b8-7c8f64eb7cbf
                query: fetch id from entities since 2022-06-02 until 2022-06-01
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Internal Server Error
        "503":
          content:
            application/problem+json:
              example:
                type: https://developer.cisco.com/docs/appdynamics/errors/#!internal-server-error
                timestamp: 2020-02-22T11:22:33.980629Z
                traceId: fc3decb4bf674b7cb16c5f208fb1f18b
                title: Service Unavailable
                detail: Unexpected error happened (logged as 224397de-5843-4954-b092-37c84aead3c9)
                tenantId: 47a01df9-54a0-472b-96b8-7c8f64eb7cbf
                query: fetch id from entities since 2022-06-02 until 2022-06-01
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Service Unavailable
      summary: Execute a query to fetch observation data.
      tags:
      - ExecuteQuery
  /query/continue:
    get:
      description: Fetch the next page of results.
      operationId: resultPagination
      parameters:
      - description: An opaque string which will allow the retrieval of the next page
          of results. The cursor is obtained from a previous query response.
        example: ewogICJza2lwIiA6IDEwMDAsCiAgInF1ZXJ5IiA6ICJGRVRDSFxuICAgIGlkLFxuICAgIGhlYWx0aF9hc19
        explode: true
        in: query
        name: cursor
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Response as a JSON array:
                  value: |-
                    [
                      {
                        "type": "model",
                        "model": {
                          "name": "m:main",
                          "fields": [
                            {
                              "alias": "id",
                              "type": "string",
                              "hints": {
                                "kind": "entity",
                                "field": "id",
                                "type": "apm:service_instance"
                              }
                            },
                            {
                              "alias": "name",
                              "type": "string",
                              "hints": {}
                            },
                            {
                              "alias": "cpm",
                              "type": "complex",
                              "hints": {
                                "kind": "metric",
                                "type": "apm:response_time"
                              },
                              "form": "reference",
                              "model": {
                                "name": "m:cpm",
                                "fields": [
                                  {
                                    "alias": "source",
                                    "type": "string",
                                    "hints": {
                                      "kind": "metric",
                                      "field": "source",
                                      "type": "apm:response_time"
                                    }
                                  },
                                  {
                                    "alias": "cpm",
                                    "type": "timeseries",
                                    "hints": {
                                      "kind": "metric",
                                      "type": "apm:response_time"
                                    },
                                    "form": "inline",
                                    "model": {
                                      "name": "m:cpm_2",
                                      "fields": [
                                        {
                                          "alias": "timestamp",
                                          "type": "timestamp",
                                          "hints": {
                                            "kind": "metric",
                                            "field": "timestamp",
                                            "type": "apm:response_time"
                                          }
                                        },
                                        {
                                          "alias": "min",
                                          "type": "number",
                                          "hints": {
                                            "kind": "metric",
                                            "field": "min",
                                            "type": "apm:response_time"
                                          }
                                        },
                                        {
                                          "alias": "max",
                                          "type": "number",
                                          "hints": {
                                            "kind": "metric",
                                            "field": "max",
                                            "type": "apm:response_time"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "data",
                        "model": {
                          "$jsonPath": "$..[?(@.type == 'model')]..[?(@.name == 'm:main')]",
                          "$model": "m:main"
                        },
                        "metadata": {
                          "since": "2022-06-14T09:21:18.143353Z",
                          "until": "2022-06-17T09:21:18.143353Z"
                        },
                        "dataset": "d:main",
                        "data": [
                          [
                            "apm:service_instance:QkYwm51nMAeUADsp4uY6NA",
                            "Query Service",
                            {
                              "$dataset": "d:metrics-1",
                              "$jsonPath": "$..[?(@.type == 'data' && @.dataset == 'd:metrics-1')]"
                            }
                          ]
                        ]
                      },
                      {
                        "type": "heartbeat"
                      },
                      {
                        "type": "data",
                        "model": {
                          "$jsonPath": "$..[?(@.type == 'model')]..[?(@.name == 'm:cpm')]",
                          "$model": "m:cpm"
                        },
                        "metadata": {
                          "granularitySeconds": 60
                        },
                        "dataset": "d:metrics-1",
                        "data": [
                          [
                            "sys:derived",
                            [
                              [
                                "2022-06-16T10:00Z",
                                470995,
                                53246567
                              ],
                              [
                                "2022-06-16T11:00Z",
                                460153,
                                94186816
                              ],
                              [
                                "2022-06-16T12:00Z",
                                460708,
                                81749730
                              ]
                            ]
                          ]
                        ]
                      },
                      {
                        "type": "error",
                        "error": {
                          "timestamp": "2022-06-17T09:29:52.578280Z",
                          "errorCode": "MS-001",
                          "title": "General Error",
                          "detail": "Metric data error (logged with TraceId: [cb7d28a9c4cb41cb88f90db48149d78d], SpanId: [c5937a4300964f2f])",
                          "traceId": "cb7d28a9c4cb41cb88f90db48149d78d",
                          "tenantId": "0baa5ce3-b54c-4153-b902-1208262aa3e1",
                          "query": "fetch id: id, name: attributes(service.name), cpm: metrics(apm:response_time) {source, timestamp, min, max} from entities(apm:service)[attributes(service.namespace) = 'Levitate'].out.to(apm:service_instance) since -3h"
                        }
                      }
                    ]
              schema:
                $ref: '#/components/schemas/QueryResponseArrayBody'
            application/x-ndjson:
              examples:
                (Part 1) Streamed JSON response as a sequence of newline-delimited JSON objects:
                  description: |-
                    Each object is printed on a single line delimited by ASCII control character `\n`.
                    JSON objects in the example are indented for better readability.
                  value: |-
                    {
                      "type": "model",
                      "model": {
                        "name": "m:main",
                        "fields": [
                          {
                            "alias": "id",
                            "type": "string",
                            "hints": {
                              "kind": "entity",
                              "field": "id",
                              "type": "apm:service_instance"
                            }
                          },
                          {
                            "alias": "name",
                            "type": "string",
                            "hints": {}
                          },
                          {
                            "alias": "cpm",
                            "type": "complex",
                            "hints": {
                              "kind": "metric",
                              "type": "apm:response_time"
                            },
                            "form": "reference",
                            "model": {
                              "name": "m:cpm",
                              "fields": [
                                {
                                  "alias": "source",
                                  "type": "string",
                                  "hints": {
                                    "kind": "metric",
                                    "field": "source",
                                    "type": "apm:response_time"
                                  }
                                },
                                {
                                  "alias": "cpm",
                                  "type": "timeseries",
                                  "hints": {
                                    "kind": "metric",
                                    "type": "apm:response_time"
                                  },
                                  "form": "inline",
                                  "model": {
                                    "name": "m:cpm_2",
                                    "fields": [
                                      {
                                        "alias": "timestamp",
                                        "type": "timestamp",
                                        "hints": {
                                          "kind": "metric",
                                          "field": "timestamp",
                                          "type": "apm:response_time"
                                        }
                                      },
                                      {
                                        "alias": "min",
                                        "type": "number",
                                        "hints": {
                                          "kind": "metric",
                                          "field": "min",
                                          "type": "apm:response_time"
                                        }
                                      },
                                      {
                                        "alias": "max",
                                        "type": "number",
                                        "hints": {
                                          "kind": "metric",
                                          "field": "max",
                                          "type": "apm:response_time"
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                (Part 2) Directly followed by next object in the body (Objects are not in an array):
                  description: |-
                    A chunk of type <em>data</em> might contain a pagination <em>_links</em> element which when followed will retrieve the next page of results.
                    The example given below is fictitious and does not represent a valid cursor.
                  value: |-
                    {
                      "type": "data",
                      "model": {
                        "$jsonPath": "$..[?(@.type == 'model')]..[?(@.name == 'm:main')]",
                        "$model": "m:main"
                      },
                      "metadata": {
                        "since": "2022-06-14T09:21:18.143353Z",
                        "until": "2022-06-17T09:21:18.143353Z"
                      },
                      "dataset": "d:main",
                      "_links": {
                        "next": {
                          "href": "/monitoring/v1/query/continue?cursor=ewogICJza2lwIiA6IDEsCiAgInF1ZXJ5IiA6ICJmZXRjaCBpZDogaWQsIG5hbWU6IG"
                        }
                      },
                      "data": [
                        [
                          "apm:service_instance:QkYwm51nMAeUADsp4uY6NA",
                          "Query Service",
                          {
                            "$dataset": "d:metrics-1",
                            "$jsonPath": "$..[?(@.type == 'data' && @.dataset == 'd:metrics-1')]"
                          }
                        ],
                        [
                          "apm:service_instance:4Qb9EQ9QOHKcSA1l6w5ncQ",
                          "Query Service",
                          {
                            "$dataset": "d:metrics-2",
                            "$jsonPath": "$..[?(@.type == 'data' && @.dataset == 'd:metrics-2')]"
                          }
                        ]
                      ]
                    }
                (Part 3) Datasets might be referenced from other datasets and might contain nested timeseries.:
                  value: |-
                    {
                      "type": "data",
                      "model": {
                        "$jsonPath": "$..[?(@.type == 'model')]..[?(@.name == 'm:cpm')]",
                        "$model": "m:cpm"
                      },
                      "metadata": {
                        "granularitySeconds": 60
                      },
                      "dataset": "d:metrics-1",
                      "data": [
                        [
                          "sys:derived",
                          [
                            [
                              "2022-06-16T10:00Z",
                              470995,
                              53246567
                            ],
                            [
                              "2022-06-16T11:00Z",
                              460153,
                              94186816
                            ],
                            [
                              "2022-06-16T12:00Z",
                              460708,
                              81749730
                            ]
                          ]
                        ]
                      ]
                    }
                (Part 4) Possibly an error:
                  value: |-
                    {
                      "type": "error",
                      "error": {
                        "timestamp": "2022-06-17T09:29:52.578280Z",
                        "errorCode": "MS-001",
                        "title": "General Error",
                        "detail": "Metric data error (logged with TraceId: [cb7d28a9c4cb41cb88f90db48149d78d], SpanId: [c5937a4300964f2f])",
                        "traceId": "cb7d28a9c4cb41cb88f90db48149d78d",
                        "tenantId": "0baa5ce3-b54c-4153-b902-1208262aa3e1",
                        "query": "fetch id: id, name: attributes(service.name), cpm: metrics(apm:response_time) {source, timestamp, min, max} from entities(apm:service)[attributes(service.namespace) = 'Levitate'].out.to(apm:service_instance) since -3h"
                      }
                    }
                (Part 5) Heartbeat if needed to make sure the connection is kept alive:
                  value: |-
                    {
                      "type": "heartbeat"
                    }
              schema:
                $ref: '#/components/schemas/executeQuery_200_response'
          description: |-
            The API returns a chunked response with a sequence of objects. The first object describes the model of the returned data.
            The model is followed by a series of datasets of actual values or error objects indicating problems during query execution.
          headers:
            transfer-encoding:
              description: chunked
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/problem+json:
              example:
                type: https://developer.cisco.com/docs/appdynamics/errors/#!input-validation
                timestamp: 2020-02-22T11:22:33.980629Z
                traceId: fc3decb4bf674b7cb16c5f208fb1f18b
                title: Query compilation failure!
                detail: Unable to compile due to query semantic errors.
                tenantId: 47a01df9-54a0-472b-96b8-7c8f64eb7cbf
                query: fetch id from (apm:serviceX)
                compilationErrors:
                - message: Unknown alias 'id'
                  fixSuggestion: ""
                  fixPossibilities: []
                  errorType: SEMANTIC
                  errorFrom: 1:6
                  errorTo: 1:7
                - message: "Referenced topology set has errors: 1:23-1:34"
                  fixPossibilities: []
                  errorType: SEMANTIC
                  errorFrom: 1:6
                  errorTo: 1:7
                - message: No Type found in the Schema for apm:serviceX with any specified
                    namespace or namespace common if none was specified
                  fixSuggestion: Did you mean 'apm:service'?
                  fixPossibilities:
                  - apm:service
                  - apm:service_endpoint
                  - apm:service_instance
                  errorType: SEMANTIC
                  errorFrom: 1:23
                  errorTo: 1:34
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          content:
            application/problem+json:
              example:
                type: https://developer.cisco.com/docs/appdynamics/errors/#!internal-server-error
                timestamp: 2020-02-22T11:22:33.980629Z
                traceId: fc3decb4bf674b7cb16c5f208fb1f18b
                title: Internal Server Error
                detail: Unexpected error happened (logged as 224397de-5843-4954-b092-37c84aead3c9)
                tenantId: 47a01df9-54a0-472b-96b8-7c8f64eb7cbf
                query: fetch id from entities since 2022-06-02 until 2022-06-01
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Internal Server Error
        "503":
          content:
            application/problem+json:
              example:
                type: https://developer.cisco.com/docs/appdynamics/errors/#!internal-server-error
                timestamp: 2020-02-22T11:22:33.980629Z
                traceId: fc3decb4bf674b7cb16c5f208fb1f18b
                title: Service Unavailable
                detail: Unexpected error happened (logged as 224397de-5843-4954-b092-37c84aead3c9)
                tenantId: 47a01df9-54a0-472b-96b8-7c8f64eb7cbf
                query: fetch id from entities since 2022-06-02 until 2022-06-01
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Service Unavailable
      summary: Fetch the next page of results.
      tags:
      - ResultPagination
components:
  responses:
    "200":
      content:
        application/json:
          examples:
            Response as a JSON array:
              value: |-
                [
                  {
                    "type": "model",
                    "model": {
                      "name": "m:main",
                      "fields": [
                        {
                          "alias": "id",
                          "type": "string",
                          "hints": {
                            "kind": "entity",
                            "field": "id",
                            "type": "apm:service_instance"
                          }
                        },
                        {
                          "alias": "name",
                          "type": "string",
                          "hints": {}
                        },
                        {
                          "alias": "cpm",
                          "type": "complex",
                          "hints": {
                            "kind": "metric",
                            "type": "apm:response_time"
                          },
                          "form": "reference",
                          "model": {
                            "name": "m:cpm",
                            "fields": [
                              {
                                "alias": "source",
                                "type": "string",
                                "hints": {
                                  "kind": "metric",
                                  "field": "source",
                                  "type": "apm:response_time"
                                }
                              },
                              {
                                "alias": "cpm",
                                "type": "timeseries",
                                "hints": {
                                  "kind": "metric",
                                  "type": "apm:response_time"
                                },
                                "form": "inline",
                                "model": {
                                  "name": "m:cpm_2",
                                  "fields": [
                                    {
                                      "alias": "timestamp",
                                      "type": "timestamp",
                                      "hints": {
                                        "kind": "metric",
                                        "field": "timestamp",
                                        "type": "apm:response_time"
                                      }
                                    },
                                    {
                                      "alias": "min",
                                      "type": "number",
                                      "hints": {
                                        "kind": "metric",
                                        "field": "min",
                                        "type": "apm:response_time"
                                      }
                                    },
                                    {
                                      "alias": "max",
                                      "type": "number",
                                      "hints": {
                                        "kind": "metric",
                                        "field": "max",
                                        "type": "apm:response_time"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "data",
                    "model": {
                      "$jsonPath": "$..[?(@.type == 'model')]..[?(@.name == 'm:main')]",
                      "$model": "m:main"
                    },
                    "metadata": {
                      "since": "2022-06-14T09:21:18.143353Z",
                      "until": "2022-06-17T09:21:18.143353Z"
                    },
                    "dataset": "d:main",
                    "data": [
                      [
                        "apm:service_instance:QkYwm51nMAeUADsp4uY6NA",
                        "Query Service",
                        {
                          "$dataset": "d:metrics-1",
                          "$jsonPath": "$..[?(@.type == 'data' && @.dataset == 'd:metrics-1')]"
                        }
                      ]
                    ]
                  },
                  {
                    "type": "heartbeat"
                  },
                  {
                    "type": "data",
                    "model": {
                      "$jsonPath": "$..[?(@.type == 'model')]..[?(@.name == 'm:cpm')]",
                      "$model": "m:cpm"
                    },
                    "metadata": {
                      "granularitySeconds": 60
                    },
                    "dataset": "d:metrics-1",
                    "data": [
                      [
                        "sys:derived",
                        [
                          [
                            "2022-06-16T10:00Z",
                            470995,
                            53246567
                          ],
                          [
                            "2022-06-16T11:00Z",
                            460153,
                            94186816
                          ],
                          [
                            "2022-06-16T12:00Z",
                            460708,
                            81749730
                          ]
                        ]
                      ]
                    ]
                  },
                  {
                    "type": "error",
                    "error": {
                      "timestamp": "2022-06-17T09:29:52.578280Z",
                      "errorCode": "MS-001",
                      "title": "General Error",
                      "detail": "Metric data error (logged with TraceId: [cb7d28a9c4cb41cb88f90db48149d78d], SpanId: [c5937a4300964f2f])",
                      "traceId": "cb7d28a9c4cb41cb88f90db48149d78d",
                      "tenantId": "0baa5ce3-b54c-4153-b902-1208262aa3e1",
                      "query": "fetch id: id, name: attributes(service.name), cpm: metrics(apm:response_time) {source, timestamp, min, max} from entities(apm:service)[attributes(service.namespace) = 'Levitate'].out.to(apm:service_instance) since -3h"
                    }
                  }
                ]
          schema:
            $ref: '#/components/schemas/QueryResponseArrayBody'
        application/x-ndjson:
          examples:
            (Part 1) Streamed JSON response as a sequence of newline-delimited JSON objects:
              description: |-
                Each object is printed on a single line delimited by ASCII control character `\n`.
                JSON objects in the example are indented for better readability.
              value: |-
                {
                  "type": "model",
                  "model": {
                    "name": "m:main",
                    "fields": [
                      {
                        "alias": "id",
                        "type": "string",
                        "hints": {
                          "kind": "entity",
                          "field": "id",
                          "type": "apm:service_instance"
                        }
                      },
                      {
                        "alias": "name",
                        "type": "string",
                        "hints": {}
                      },
                      {
                        "alias": "cpm",
                        "type": "complex",
                        "hints": {
                          "kind": "metric",
                          "type": "apm:response_time"
                        },
                        "form": "reference",
                        "model": {
                          "name": "m:cpm",
                          "fields": [
                            {
                              "alias": "source",
                              "type": "string",
                              "hints": {
                                "kind": "metric",
                                "field": "source",
                                "type": "apm:response_time"
                              }
                            },
                            {
                              "alias": "cpm",
                              "type": "timeseries",
                              "hints": {
                                "kind": "metric",
                                "type": "apm:response_time"
                              },
                              "form": "inline",
                              "model": {
                                "name": "m:cpm_2",
                                "fields": [
                                  {
                                    "alias": "timestamp",
                                    "type": "timestamp",
                                    "hints": {
                                      "kind": "metric",
                                      "field": "timestamp",
                                      "type": "apm:response_time"
                                    }
                                  },
                                  {
                                    "alias": "min",
                                    "type": "number",
                                    "hints": {
                                      "kind": "metric",
                                      "field": "min",
                                      "type": "apm:response_time"
                                    }
                                  },
                                  {
                                    "alias": "max",
                                    "type": "number",
                                    "hints": {
                                      "kind": "metric",
                                      "field": "max",
                                      "type": "apm:response_time"
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
            (Part 2) Directly followed by next object in the body (Objects are not in an array):
              description: |-
                A chunk of type <em>data</em> might contain a pagination <em>_links</em> element which when followed will retrieve the next page of results.
                The example given below is fictitious and does not represent a valid cursor.
              value: |-
                {
                  "type": "data",
                  "model": {
                    "$jsonPath": "$..[?(@.type == 'model')]..[?(@.name == 'm:main')]",
                    "$model": "m:main"
                  },
                  "metadata": {
                    "since": "2022-06-14T09:21:18.143353Z",
                    "until": "2022-06-17T09:21:18.143353Z"
                  },
                  "dataset": "d:main",
                  "_links": {
                    "next": {
                      "href": "/monitoring/v1/query/continue?cursor=ewogICJza2lwIiA6IDEsCiAgInF1ZXJ5IiA6ICJmZXRjaCBpZDogaWQsIG5hbWU6IG"
                    }
                  },
                  "data": [
                    [
                      "apm:service_instance:QkYwm51nMAeUADsp4uY6NA",
                      "Query Service",
                      {
                        "$dataset": "d:metrics-1",
                        "$jsonPath": "$..[?(@.type == 'data' && @.dataset == 'd:metrics-1')]"
                      }
                    ],
                    [
                      "apm:service_instance:4Qb9EQ9QOHKcSA1l6w5ncQ",
                      "Query Service",
                      {
                        "$dataset": "d:metrics-2",
                        "$jsonPath": "$..[?(@.type == 'data' && @.dataset == 'd:metrics-2')]"
                      }
                    ]
                  ]
                }
            (Part 3) Datasets might be referenced from other datasets and might contain nested timeseries.:
              value: |-
                {
                  "type": "data",
                  "model": {
                    "$jsonPath": "$..[?(@.type == 'model')]..[?(@.name == 'm:cpm')]",
                    "$model": "m:cpm"
                  },
                  "metadata": {
                    "granularitySeconds": 60
                  },
                  "dataset": "d:metrics-1",
                  "data": [
                    [
                      "sys:derived",
                      [
                        [
                          "2022-06-16T10:00Z",
                          470995,
                          53246567
                        ],
                        [
                          "2022-06-16T11:00Z",
                          460153,
                          94186816
                        ],
                        [
                          "2022-06-16T12:00Z",
                          460708,
                          81749730
                        ]
                      ]
                    ]
                  ]
                }
            (Part 4) Possibly an error:
              value: |-
                {
                  "type": "error",
                  "error": {
                    "timestamp": "2022-06-17T09:29:52.578280Z",
                    "errorCode": "MS-001",
                    "title": "General Error",
                    "detail": "Metric data error (logged with TraceId: [cb7d28a9c4cb41cb88f90db48149d78d], SpanId: [c5937a4300964f2f])",
                    "traceId": "cb7d28a9c4cb41cb88f90db48149d78d",
                    "tenantId": "0baa5ce3-b54c-4153-b902-1208262aa3e1",
                    "query": "fetch id: id, name: attributes(service.name), cpm: metrics(apm:response_time) {source, timestamp, min, max} from entities(apm:service)[attributes(service.namespace) = 'Levitate'].out.to(apm:service_instance) since -3h"
                  }
                }
            (Part 5) Heartbeat if needed to make sure the connection is kept alive:
              value: |-
                {
                  "type": "heartbeat"
                }
          schema:
            $ref: '#/components/schemas/executeQuery_200_response'
      description: |-
        The API returns a chunked response with a sequence of objects. The first object describes the model of the returned data.
        The model is followed by a series of datasets of actual values or error objects indicating problems during query execution.
      headers:
        transfer-encoding:
          description: chunked
          explode: false
          schema:
            type: string
          style: simple
    "400":
      content:
        application/problem+json:
          example:
            type: https://developer.cisco.com/docs/appdynamics/errors/#!input-validation
            timestamp: 2020-02-22T11:22:33.980629Z
            traceId: fc3decb4bf674b7cb16c5f208fb1f18b
            title: Query compilation failure!
            detail: Unable to compile due to query semantic errors.
            tenantId: 47a01df9-54a0-472b-96b8-7c8f64eb7cbf
            query: fetch id from (apm:serviceX)
            compilationErrors:
            - message: Unknown alias 'id'
              fixSuggestion: ""
              fixPossibilities: []
              errorType: SEMANTIC
              errorFrom: 1:6
              errorTo: 1:7
            - message: "Referenced topology set has errors: 1:23-1:34"
              fixPossibilities: []
              errorType: SEMANTIC
              errorFrom: 1:6
              errorTo: 1:7
            - message: No Type found in the Schema for apm:serviceX with any specified
                namespace or namespace common if none was specified
              fixSuggestion: Did you mean 'apm:service'?
              fixPossibilities:
              - apm:service
              - apm:service_endpoint
              - apm:service_instance
              errorType: SEMANTIC
              errorFrom: 1:23
              errorTo: 1:34
          schema:
            $ref: '#/components/schemas/ErrorResult'
      description: Bad Request
    "403":
      description: Forbidden
    "500":
      content:
        application/problem+json:
          example:
            type: https://developer.cisco.com/docs/appdynamics/errors/#!internal-server-error
            timestamp: 2020-02-22T11:22:33.980629Z
            traceId: fc3decb4bf674b7cb16c5f208fb1f18b
            title: Internal Server Error
            detail: Unexpected error happened (logged as 224397de-5843-4954-b092-37c84aead3c9)
            tenantId: 47a01df9-54a0-472b-96b8-7c8f64eb7cbf
            query: fetch id from entities since 2022-06-02 until 2022-06-01
          schema:
            $ref: '#/components/schemas/ErrorResult'
      description: Internal Server Error
    "503":
      content:
        application/problem+json:
          example:
            type: https://developer.cisco.com/docs/appdynamics/errors/#!internal-server-error
            timestamp: 2020-02-22T11:22:33.980629Z
            traceId: fc3decb4bf674b7cb16c5f208fb1f18b
            title: Service Unavailable
            detail: Unexpected error happened (logged as 224397de-5843-4954-b092-37c84aead3c9)
            tenantId: 47a01df9-54a0-472b-96b8-7c8f64eb7cbf
            query: fetch id from entities since 2022-06-02 until 2022-06-01
          schema:
            $ref: '#/components/schemas/ErrorResult'
      description: Service Unavailable
  schemas:
    QueryRequestBody:
      description: Client request with a query.
      example:
        query: query
      properties:
        query:
          description: Query string.
          type: string
      type: object
    QueryResponseArrayBody:
      description: "The ModelResultChunk will be always the first item in the response\
        \ array. The rest of the items might be a mix of DataResultChunk, ErrorResultChunk\
        \ and HeartbeatResultChunk"
      items:
        $ref: '#/components/schemas/QueryResponseArrayBody_inner'
      type: array
    ModelResultChunk:
      description: A schema of the data to follow. This object can only be at the
        first position in the response.
      properties:
        type:
          description: Attribute identifying a response chunk as holding the response
            model.
          enum:
          - model
          example: model
          type: string
        model:
          $ref: '#/components/schemas/Model'
      type: object
    DataResultChunk:
      description: A part of the result data. There may be multiple chunks of this
        type in the response.
      properties:
        type:
          description: Attribute identifying a response chunk holding data.
          enum:
          - data
          example: data
          type: string
        _links:
          $ref: '#/components/schemas/PaginationReference'
        dataset:
          description: Name of the dataset. May be used as a reference in other datasets
            when returning multi dimensional data.
          type: string
        model:
          $ref: '#/components/schemas/ModelReference'
        metadata:
          $ref: '#/components/schemas/MetadataResultItem'
        data:
          items:
            $ref: '#/components/schemas/DataResultItem'
          type: array
      type: object
    ErrorResultChunk:
      description: A signal that an error occurred during query execution.
      properties:
        type:
          description: Attribute identifying a response chunk as holding information
            of an error.
          enum:
          - error
          example: error
          type: string
        error:
          $ref: '#/components/schemas/ErrorResultChunk_error'
      type: object
    HeartbeatResultChunk:
      description: An empty chunk sent to prevent the HTTP connection from being pre-maturely
        closed.
      properties:
        type:
          description: Attribute identifying a response chunk as a heartbeat.
          enum:
          - heartbeat
          example: heartbeat
          type: string
      type: object
    ModelResultItem:
      description: A description of a simple data type of a single fetched expression
        in the result.
      properties:
        alias:
          type: string
        type:
          description: Specifies a type of the value in the JSON response.
          example: "'string', 'number', 'timestamp', ..."
          type: string
        hints:
          $ref: '#/components/schemas/Hints'
      type: object
    ComplexModelResultItem:
      description: A description of a complex data type of a single fetched expression
        in the result.
      properties:
        alias:
          type: string
        type:
          description: Specifies a type of the complex value. Individual fields are
            described in the 'model'.
          example: "'complex', 'timeseries' specifically for time series."
          type: string
        hints:
          $ref: '#/components/schemas/Hints'
        form:
          description: "Describes where timeseries or complex objects are located\
            \ in the response. Possible values are: inline, reference, link"
          type: string
        model:
          $ref: '#/components/schemas/Model'
      type: object
    Model:
      description: A description of the schema of the data to follow in the DataResultChunks.
      properties:
        name:
          description: This name will be used by the following DataResultChunks as
            a reference to the description of their structure.
          type: string
        fields:
          description: |-
            An array of type descriptors for each fetched expression in the query.
            The order of the array matches the order of values in the DataResultChunks with this schema model.'
          items:
            $ref: '#/components/schemas/Model_fields_inner'
          type: array
      type: object
    Hints:
      description: Additional information about a single fetched expression from the
        query.
      properties:
        kind:
          description: |-
            Type of observed component from AppD MELT Model.
            Optional, if applicable
          example: "'entity', 'metric', 'event', ..."
          type: string
        field:
          description: "Name of the MELT model property mentioned in the 'kind' hint.\n\
            See AppD MELT Model \nOptional, if applicable (for example not for expression)"
          example: '''value'' when fetching a Property'
          type: string
        type:
          description: Full name with namespace of the type.
          example: apm:service
          type: string
      type: object
    MetadataResultItem:
      anyOf:
      - $ref: '#/components/schemas/MainMetadataResultItem'
      - $ref: '#/components/schemas/MetricMetadataResultItem'
      - $ref: '#/components/schemas/EventMetadataResultItem'
      description: Additional information collected for the data contained in the
        data chunk.
      type: object
    MainMetadataResultItem:
      description: Metadata for the main data chunk.
      properties:
        since:
          description: Specifies the start of the time range which was used for querying.
          example: 2022-05-24T10:18:22.12Z
          format: date-time
          type: string
        until:
          description: Specifies the end of the time range which was used for querying.
          example: 2022-05-24T11:18:22.12Z
          format: date-time
          type: string
      type: object
    MetricMetadataResultItem:
      description: Metadata for a metric data chunk.
      properties:
        granularitySeconds:
          description: |-
            Actual granularity of metric data points.
            The value is the length of the time interval of a single data point.
          type: number
      type: object
    EventMetadataResultItem:
      description: Metadata for an event data chunk.
      properties:
        schema:
          description: Arbitrary map of keys and values associated with the event
            data.
          type: object
        statistics:
          description: Arbitrary map of statistics associated with the event data.
          type: object
      type: object
    DataResultItem:
      description: A row of values with mixed data types based on the fetched expressions.
      items:
        $ref: '#/components/schemas/DataResultItem_inner'
      type: array
    DatasetReference:
      description: A reference to a specific dataset.
      properties:
        $dataset:
          description: Unique name of the dataset.
          example: d:metrics-1
          type: string
        $jsonPath:
          description: JSON Path that filters the correct dataset from the list of
            all datasets.
          example: "$..[?(@.type == 'data' && @.dataset == 'd:metrics-1')]"
          type: string
      type: object
    PaginationReference:
      description: A reference to the next page of results if there are more results
        to be had.
      properties:
        next:
          $ref: '#/components/schemas/PaginationReference_next'
      type: object
    ModelReference:
      description: A reference to a specific model.
      properties:
        $model:
          description: A unique model name.
          example: m:main
          type: string
        $jsonPath:
          description: JSON Path that filters the correct model from the ModelResultChunk.
          example: "$..[?(@.type == 'model')]..[?(@.name == 'm:main')]"
          type: string
      type: object
    ErrorResult:
      description: |-
        A representation of an error that occurred during query execution. It contains at least brief a description
        of the error and contextual information of the corresponding request.
      properties:
        type:
          description: URI to the documentation of the error.
          type: string
        errorCode:
          description: The code of a error.
          example: SC-001
          type: string
        timestamp:
          description: Time and date the error occurred.
          example: 2020-02-22T11:22:33.980629Z
          format: date-time
          type: string
        traceId:
          description: Id to correlate events and logs across dependent services for
            a single query.
          example: fc3decb4bf674b7cb16c5f208fb1f18b
          type: string
        title:
          description: Brief description of the error.
          example: Query compilation failure!
          type: string
        detail:
          description: Usually a more detailed description of the error.
          example: "Unable to compile due to query semantic errors. (logged with TraceId:\
            \ [467345r43535e4246f9a895c44636076bf0], SpanId: [8c3345345b273d43])"
          type: string
        tenantId:
          description: The id of a tenant for which the query was executed.
          example: 47a01df9-54a0-472b-96b8-7c8f64eb7cbf
          type: string
        query:
          description: The input query.
          example: fetch id from entities since 2022-06-02 until 2022-06-01
          type: string
        errorDetails:
          description: An array containing the details of an error.
          items:
            $ref: '#/components/schemas/ErrorDetailsArray_inner'
          type: array
      required:
      - detail
      - query
      - tenantId
      - timestamp
      - title
      - traceId
      - type
      type: object
    ErrorDetailsArray:
      description: An array containing the details of an error.
      items:
        $ref: '#/components/schemas/ErrorDetailsArray_inner'
      type: array
    ErrorDetailItem:
      description: A detailed description of the error.
      properties:
        message:
          description: A short description on error cause.
          example: Unknown alias 'id'
          type: string
        fixSuggestion:
          description: A hint to resolve the error.
          example: Did you mean 'apm:service_endpoint'?
          type: string
        fixPossibilities:
          description: A list of fix possibilities to resolve the error.
          items:
            $ref: '#/components/schemas/ErrorDetailItem_fixPossibilities_inner'
          type: array
        errorType:
          description: The type of the error.
          enum:
          - SEMANTIC
          - SYNTAX
          example: SEMANTIC
          type: string
        errorFrom:
          description: The start position of the error in format 'lineNum:charIdx'.
          example: 1:6
          type: string
        errorTo:
          description: The end position of the error in format 'lineNum:charIdx'.
          example: 1:7
          type: string
      required:
      - errorFrom
      - errorTo
      - errorType
      - fixPossibilities
      - message
      type: object
    executeQuery_200_response:
      anyOf:
      - $ref: '#/components/schemas/ModelResultChunk'
      - $ref: '#/components/schemas/DataResultChunk'
      - $ref: '#/components/schemas/ErrorResultChunk'
      - $ref: '#/components/schemas/HeartbeatResultChunk'
      discriminator:
        mapping:
          model: '#/components/schemas/ModelResultChunk'
          data: '#/components/schemas/DataResultChunk'
          error: '#/components/schemas/ErrorResultChunk'
          heartbeat: '#/components/schemas/HeartbeatResultChunk'
        propertyName: type
    QueryResponseArrayBody_inner:
      anyOf:
      - $ref: '#/components/schemas/ModelResultChunk'
      - $ref: '#/components/schemas/DataResultChunk'
      - $ref: '#/components/schemas/ErrorResultChunk'
      - $ref: '#/components/schemas/HeartbeatResultChunk'
    ErrorResultChunk_error:
      properties:
        type:
          description: URI to the documentation of the error.
          example: https://developer.cisco.com/docs/appdynamics/errors/#!internal-server-error
          type: string
        errorCode:
          description: The code of the error.
          example: SC-001
          type: string
        timestamp:
          description: Time and date the `ErrorResultChunk` was created.
          example: 2020-02-22T11:22:33.980629Z
          format: date-time
          type: string
        traceId:
          description: It correlates events and logs messages across dependent services
            for single business transaction.
          example: fc3decb4bf674b7cb16c5f208fb1f18b
          type: string
        title:
          description: Brief description of the error.
          example: Unexpected error happened
          type: string
        detail:
          description: Usually more detailed description of the error.
          example: Unexpected error happened (logged as 224397de-5843-4954-b092-37c84aead3c9)
          type: string
        query:
          description: The input query.
          example: fetch id from entities since 2022-06-02 until 2022-06-01
          type: string
      type: object
    Model_fields_inner:
      anyOf:
      - $ref: '#/components/schemas/ModelResultItem'
      - $ref: '#/components/schemas/ComplexModelResultItem'
    DataResultItem_inner:
      anyOf:
      - type: string
      - type: integer
      - type: number
      - type: boolean
      - $ref: '#/components/schemas/DatasetReference'
      - type: object
    PaginationReference_next:
      description: Holds the link to the next page of results.
      properties:
        href:
          description: The effective link to the next result page
          example: /monitoring/v1/query/continue?cursor=ewogICJza2lwIiA6IDEwMDAsCiAgInF1ZXJ5IiA6ICJGRVRDSFxuICAgIGlkLFxuICAgIGhlYWx0aF9hc19
          type: string
      type: object
    ErrorDetailsArray_inner:
      anyOf:
      - $ref: '#/components/schemas/ErrorDetailItem'
    ErrorDetailItem_fixPossibilities_inner:
      anyOf:
      - example: apm:backend
        type: string
x-visibility-level: external
x-doc-visibility-level: private
